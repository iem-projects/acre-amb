#N canvas 551 252 699 422 10;
#X declare -path ../;
#X declare -lib iemlib1;
#X declare -lib zexy;
#X declare -stdpath iemlib;
#X declare -lib iemlib2;
#X declare -lib iemmatrix;
#X declare -lib iem_ambi;
#X declare -lib iem_bin_ambi;
#X obj 8 93 declare -path ../;
#X text 98 373 use the dac~ ensures you the routing on different setups
;
#N canvas 179 437 599 300 init 0;
#X obj 45 32 loadbang;
#X msg 45 54 \; /mxr/dsp 1 \; /mxr/fadetime 30 \;;
#X msg 215 60 \; /test/program/load symbol ../mxr/mxr.txt \; /test/program/nr
0 \; /test/program/recall bang;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X restore 23 22 pd init;
#X obj 462 27 ds/storage_logic /test;
#X text 411 10 --- data storage for example ---;
#X obj 448 235 noise~;
#X obj 447 281 prvu~;
#X obj 447 304 s A/vu;
#X obj 522 284 env~;
#X floatatom 522 306 5 0 0 0 - - -, f 5;
#X text 28 188 --- MIXER Main Section with out channels ...;
#X text 445 217 --- general fader unit ...;
#X text 29 231 --- testone to out buses ---;
#N canvas 6 52 450 347 GUI 0;
#X obj 133 156 vu 8 120 A/vu A -1 -8 0 8 -66577 -1 1 0;
#X text 77 8 --- fader-guis ---;
#X text 168 103 fader-vu_ctl;
#X text 75 100 fader_ctrl;
#X obj 194 120 mxr/fader/vu_ctl A OUT_A;
#X obj 61 124 mxr/fader/ctl A CH_A;
#X obj 102 43 fader/volvu_ctl A out_A;
#X restore 144 24 pd GUI fader;
#X obj 33 254 mxr/test/tones~ 1;
#X obj 447 259 mxr/fader/fader~ A 50;
#X obj 44 285 throw~ /in/1~;
#X obj 32 306 throw~ /in/2~;
#X text 236 88 --- data storage for testtones ---;
#X text 504 388 (c) GPL - acre \, ritsch;
#N canvas 309 52 777 558 GUI-EXAMPLE 0;
#X obj 629 47 ds/ctl /test;
#X text 261 -1 test main patches for out Mixer with 1 sub and 4 outs
;
#X obj 311 398 tgl 15 0 /out/2/monitor/pre /out/2/monitor/pre pre 1
7 1 10 -257985 -1 -1 0 1;
#X obj 331 398 tgl 15 0 /out/2/monitor/post /out/2/monitor/post pst
1 7 1 10 -257985 -1 -1 0 1;
#X obj 204 398 tgl 15 0 /out/1/monitor/pre /out/1/monitor/pre pre 1
7 1 10 -257985 -1 -1 0 1;
#X obj 222 398 tgl 15 0 /out/1/monitor/post /out/1/monitor/post pst
1 7 1 10 -257985 -1 -1 0 1;
#X text 25 -3 Mixer Main Section with Ctls;
#X obj 415 47 mxr/mo/ctl;
#X obj 211 297 mxr/out/ctl /out/1;
#X obj 211 347 mxr/out/sub_ctl /out/1 /out/sub/1;
#X obj 310 47 mxr/sub/ctl /out/sub/1;
#N canvas 911 434 450 300 alternative 0;
#X obj 271 87 fader/vol_ctl /out/4 OUT4;
#X obj 160 85 fader/volvu_ctl /out/3 OUT3;
#X text 43 21 instead of out/ctl fader GUIs can be used;
#X text 162 42 fader/volvu_ctl;
#X text 275 63 fader/vol_ctl;
#X text 21 44 mxr/fader/vu_ctl;
#X text 70 64 mxr/fader/ctl;
#X obj 31 79 mxr/fader/vu_ctl /out/1 OUT1;
#X obj 94 82 mxr/fader/ctl /out/2 OUT2;
#X restore 211 512 pd alternative out channels;
#X obj 210 47 mxr/master/ctl /out;
#X obj 520 47 mxr/test/tones_ctl 1;
#X obj 319 65 tgl 15 0 /out/sub/1/monitor/send /out/sub/1/monitor/send
m 4 7 1 10 -257985 -1 -1 0 1;
#X obj 416 297 mxr/in/bus_ctl /bus/X;
#X obj 4 47 mxr/in/ch_ctl /in/1;
#X obj 522 297 mxr/in/buslive_ctl /bus/Y;
#X text 8 28 --- Channel Strips ---;
#X text 18 508 --- Channel Strips ---;
#X text 217 27 ---Master---;
#X text 309 27 - sub-master -;
#X text 419 27 -Monitoring-;
#X text 519 29 - Testtones -;
#X text 628 27 --- Scenes ---;
#X text 220 428 --- simple out channels ---;
#X text 424 275 --- bus ---;
#X text 518 274 --- buslive ---;
#X text 212 278 --- out \, subout channels ---;
#X obj 104 47 mxr/in/ch_ctl /in/2;
#X obj 311 297 mxr/out/ctl /out/2;
#X obj 211 447 mxr/out/ctl /out/3;
#X obj 311 447 mxr/out/ctl /out/4;
#X obj 311 347 mxr/out/sub_ctl /out/2 /out/sub/1;
#X restore 246 23 pd GUI-EXAMPLE;
#X text 34 -2 example/test patch for ambisonics tools with mxr;
#N canvas 2 79 303 273 declares 0;
#X obj 18 58 declare -lib iemlib1;
#X obj 18 111 declare -lib zexy;
#X obj 18 94 declare -stdpath iemlib;
#X text 33 30 for acre;
#X text 38 141 for amb;
#X obj 17 75 declare -lib iemlib2;
#X obj 20 164 declare -lib iemmatrix;
#X text 41 210 for binaural tools;
#X obj 17 190 declare -lib iem_ambi;
#X obj 17 238 declare -lib iem_bin_ambi;
#X restore 22 42 pd declares;
#X text 6 73 patch should work in parent dir;
#N canvas 578 96 600 389 AMBMIMIXER 1;
#X obj 19 39 adc~ 1;
#X obj 18 60 mxr/in/ch~ /in/1;
#X obj 154 46 adc~ 2;
#X obj 330 52 mxr/in/ch_ds /test /in/1;
#X obj 330 74 mxr/in/ch_ds /test /in/2;
#X text 16 4 Two Inchannels from ADC goes to one Bus X \, which goes
into a second BUS Y with livecontrol;
#X text 325 31 --- data storages for this ---;
#X text 293 223 (c) GPL \, acre winfried ritsch;
#X obj 17 82 throw~ ch1~;
#X obj 153 67 mxr/in/ch~ /in/2;
#X obj 153 89 throw~ ch2~;
#X obj 15 117 catch~ ch1~;
#X obj 152 115 catch~ ch2~;
#X obj 12 154 # amb/encode~ c1 3D 3 AMB1;
#X text 58 194 <ch-id> <type> <order> <BUS name>;
#X obj 160 175 # amb/encode~ c1 3D 1 AMB1;
#X text 138 239 Ambisonics Decoder must have >= order than encoders
;
#X obj 21 257 # amb/decoder d1 3D 4 AMB1 OUT1;
#X obj 21 284 # amb/outs OUT1 DAC1 25 1;
#X text 227 312 USE MIXER for this ????;
#X obj 21 307 # mxr/dacs DAC1 26;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 9 0;
#X connect 9 0 10 0;
#X restore 56 206 pd AMBMIMIXER;
#X connect 5 0 15 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 14 0 16 0;
#X connect 14 0 17 0;
#X connect 15 0 6 0;
#X connect 15 0 8 0;
