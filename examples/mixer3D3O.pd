#N canvas 452 241 910 471 10;
#X declare -lib iemlib1;
#X declare -lib zexy;
#X declare -stdpath iemlib;
#X declare -lib iemlib2;
#X declare -lib iemmatrix;
#X declare -lib iem_ambi;
#X declare -lib iem_bin_ambi;
#X declare -path iemlib;
#X declare -path ../..;
#N canvas 281 238 533 287 init 0;
#X msg 14 95 \; pd-GUI vis 1;
#X obj 15 12 acre/initbang;
#X obj 14 73 r second_init;
#X obj 217 10 acre/initbang;
#X msg 15 34 \; /mxr/fadetime 30 \;;
#X obj 264 47 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 214 93 inits for dynamic patching;
#X text 64 163 load settings for mixer and playback relativ to acre
lib;
#X obj 217 74 amb/amb/initbangs;
#X obj 14 157 del 10;
#X obj 14 133 r /amb/inited;
#X msg 14 184 \; /set/program/load symbol ../amb/examples/mixer3D3O.txt
\; /set/program/nr 0 \; /set/program/recall bang, f 64;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 8 0;
#X connect 5 0 8 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X restore 17 35 pd init;
#N canvas 571 273 303 290 declares 0;
#X obj 18 58 declare -lib iemlib1;
#X obj 18 111 declare -lib zexy;
#X obj 18 94 declare -stdpath iemlib;
#X text 33 30 for acre;
#X text 38 141 for amb;
#X obj 17 75 declare -lib iemlib2;
#X obj 20 164 declare -lib iemmatrix;
#X text 41 210 for binaural tools;
#X obj 17 190 declare -lib iem_ambi;
#X obj 17 238 declare -lib iem_bin_ambi;
#X obj 20 8 declare -path iemlib;
#X restore 17 54 pd declares;
#X text 16 82 patch should work in parent dir;
#N canvas 163 161 978 525 GUI 1;
#X obj 248 55 mxr/test/tones_ctl 1;
#X obj 119 55 ds/ctl /set;
#X obj 22 34 bng 15 250 50 0 /amb/initbang /amb/initbang REINIT 17
7 0 10 -262144 -1 -1;
#X obj 727 54 amb/rrr/ctl /REV;
#X obj 19 55 mxr/master/ctl M;
#X text 17 10 Example Mixer 3rd order 3D to an Ambisonics Bus output
;
#X obj 69 255 amb/bus/outs_ctl AMBIBUS 16 AMBI;
#X obj 19 255 amb/bus/ctl~ 3D 3 AMBI;
#X obj 827 54 amb/player/ctl player;
#X obj 248 355 amb/spat/ch_ctl /ch/1 3D;
#X obj 248 455 amb/spat/rotz_ctl /ch/1;
#X obj 363 260 amb/spat/ch_ctl /ch/2 2D;
#X obj 248 255 amb/spat/ch_hemi /ch/1 3D;
#N canvas 7 69 778 505 decoder 0;
#X obj 25 55 ds/ctl /cal;
#X text 28 8 Calibration stores volumes and delays of outs;
#X obj 161 65 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 160 86 openpanel;
#X obj 159 134 bng 15 250 50 0 /amb/dec/lehrstudio/print /amb/dec/lehrstudio/print
print_decoder 17 7 0 10 -262144 -1 -1;
#X text 200 56 load decoder matrix;
#X obj 160 107 s /amb/dec/lehrstudio/load;
#X text 173 167 load a default calibration;
#X text 421 166 (relative to ds/ lib );
#X msg 27 306 \; /cal/program/load symbol amb/examples/mixer3D3O-13.1_cal.txt
\; /cal/program/nr 0 \; /cal/program/recall bang, f 76;
#X msg 27 367 \; /amb/dec/lehrstudio/load symbol ../amb/examples/mixer3D3O-13.1_allrad.mtx
, f 88;
#X msg 27 402 \; /amb/dec/lehrstudio/print bang, f 88;
#X obj 27 270 r /amb/inited;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X restore 26 334 pd decoder;
#X text 117 34 parameter storage;
#X text 255 31 Testchannel 1;
#X text 365 33 sample looper;
#X obj 365 55 mxr/test/ts_ctl schritte;
#X text 728 19 Ambisonics;
#X text 729 33 Reverb 6 in;
#X text 365 367 spat in 2D 3O;
#X text 362 382 rendered to 3D;
#X restore 213 28 pd GUI;
#X text 10 241 --- Out Kanaele (DACs) und Monitor ---;
#X text 18 130 --- Ambisonics Bus AMB1/Decoder ---;
#X obj 573 33 mxr/test/tones_ds /set 1;
#X text 427 339 --- Ambisonics Player ---;
#X obj 112 55 ds/storage_logic /set;
#X obj 429 382 amb/amb/n 3D 3;
#X obj 18 102 declare -path ../..;
#X text 686 335 --- REV ---;
#X obj 668 380 amb/rrr/ds /rrr /REV;
#X obj 669 402 amb/rrr/presets;
#X obj 10 283 mxr/master/master~ M;
#X text 128 148 (3+1)Â²=16;
#X obj 669 357 amb/rrr/dsp~ /REV rev AMBI;
#X text 9 262 16 Ambisonics channels out;
#X text 16 3 Example 3.order Ambisonics Test and Player to Ambisonics
Bus;
#X text 44 146 Make a bus;
#X text 195 170 without fader master;
#X text 253 194 with fader master;
#X obj 429 360 r /amb/encinit;
#X text 447 401 max channel count;
#X obj 429 418 amb/player/dsp~ player 16 AMBI;
#X obj 429 438 amb/player/ds /set player;
#X obj 422 109 amb/spat/rotz /ch/1;
#X text 465 3 --- TEST Channel 1 with encoder ---;
#X text 427 139 --- test channel in 2 decoder for 3D encoder ---;
#X obj 583 164 mxr/test/ts_ds /set schritte;
#X obj 429 164 mxr/test/ts schritte;
#X obj 11 193 amb/bus/outs~ AMBIBUS 16 AMBI M;
#X obj 12 171 # amb/bus/dsp~ 3D 3 AMBI;
#X text 7 354 Output Ambisonic to DACs 3-18;
#X obj 9 372 amb/bus/dacs~ outbus 16 AMBI 3;
#X obj 447 185 throw~ rev-2~;
#X obj 430 240 amb/spat/rotz /ch/2;
#X obj 577 240 amb/spat/rotz_ds /set /ch/2;
#X text 428 261 --- decode 2D to a speaker ring with 7 speaker ---
;
#X obj 432 281 amb/decoder/dsp~ 2Dto3D 2D 3 AMBI2D virt7out 7;
#N canvas 130 128 773 501 amb/encoder/bus 0;
#X obj 33 83 amb/spat/ch~ /virt/1 3D 3 AMBI;
#X obj 33 56 r~ virt7out-1~;
#X text 29 38 front center=1 \, count to left;
#X text 153 56 0 Grad;
#X obj 32 133 amb/spat/ch~ /virt/2 3D 3 AMBI;
#X obj 32 187 amb/spat/ch~ /virt/3 3D 3 AMBI;
#X obj 31 238 amb/spat/ch~ /virt/4 3D 3 AMBI;
#X obj 30 292 amb/spat/ch~ /virt/5 3D 3 AMBI;
#X obj 30 351 amb/spat/ch~ /virt/6 3D 3 AMBI;
#X obj 36 407 amb/spat/ch~ /virt/7 3D 3 AMBI;
#X obj 385 114 acre/count_until;
#X msg 385 92 7;
#X obj 385 26 loadbang;
#X obj 361 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 449 67 360 7;
#X obj 449 89 /;
#X obj 385 50 t b b b;
#X obj 385 207 iem_s;
#X msg 470 183 set /virt/\$1/azimuth;
#X obj 380 399 iem_s;
#X msg 427 370 set /virt/\$1/elevation;
#X obj 381 368 f 10;
#X obj 381 343 t b f;
#X obj 381 252 r /ring/height;
#X obj 381 320 acre/count_until;
#X msg 381 297 7;
#X obj 381 274 t b f;
#X obj 385 163 - 1;
#X obj 385 184 * 51.4286;
#X obj 385 136 t f b f;
#X obj 543 83 acre/count_until;
#X msg 543 61 7;
#X msg 543 105 \; /virt/\$1/dist 1;
#X obj 32 106 r~ virt7out-2~;
#X obj 32 160 r~ virt7out-3~;
#X obj 31 211 r~ virt7out-4~;
#X obj 30 265 r~ virt7out-5~;
#X obj 30 324 r~ virt7out-6~;
#X obj 36 380 r~ virt7out-7~;
#X text 33 454 Note: Should go in an spat/chls~ abstraction;
#X text 427 398 10 Grad is fine for good energy distribution;
#X text 31 -2 Virtual 7 speaker in an circle \, where the height can
be controlled;
#X obj 566 33 loadbang;
#X obj 543 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 1 0 0 0;
#X connect 10 0 29 0;
#X connect 11 0 10 0;
#X connect 12 0 16 0;
#X connect 13 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 28 1;
#X connect 16 0 11 0;
#X connect 16 1 14 0;
#X connect 18 0 17 1;
#X connect 20 0 19 1;
#X connect 21 0 19 0;
#X connect 22 0 21 0;
#X connect 22 1 20 0;
#X connect 23 0 26 0;
#X connect 24 0 22 0;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X connect 26 1 21 1;
#X connect 27 0 28 0;
#X connect 28 0 17 0;
#X connect 29 0 27 0;
#X connect 29 2 18 0;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 33 0 4 0;
#X connect 34 0 5 0;
#X connect 35 0 6 0;
#X connect 36 0 7 0;
#X connect 37 0 8 0;
#X connect 38 0 9 0;
#X connect 42 0 31 0;
#X connect 43 0 31 0;
#X restore 432 305 pd amb/encoder/bus virt7out 7 3D 3 AMBI;
#X obj 423 31 mxr/test/tones~ 1;
#X obj 440 57 throw~ rev-1~;
#X obj 422 85 amb/spat/ch~ /ch/1 3D 3 AMBI;
#X obj 664 84 amb/spat/ch_ds /set /ch/1;
#X obj 429 216 amb/spat/ch~ /ch/2 2D 3 AMBI2D;
#X text 651 216 dont need to store position;
#X text 570 109 position is stored \, only for performance;
#X obj 11 328 amb/bus/dacs~ stereo 2 bin;
#X text 10 313 output stereo to DAC 1 \, 2;
#X text 14 390 for external Decoder;
#N canvas 391 57 809 328 set_decoder 0;
#X msg 37 198 \; 2Dto3D/load symbol ../examples/decoder-2D3O7SPK.mtx
, f 55;
#X obj 41 156 loadbang;
#X connect 1 0 0 0;
#X restore 763 285 pd set_decoder;
#X connect 9 0 24 0;
#X connect 22 0 9 0;
#X connect 30 0 35 0;
#X connect 30 0 45 0;
#X connect 41 0 42 0;
#X connect 41 0 43 0;
