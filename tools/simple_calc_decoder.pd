#N canvas 1223 327 685 628 10;
#X declare -lib iemlib1;
#X declare -lib zexy;
#X declare -stdpath iemlib;
#X declare -lib iemlib2;
#X declare -lib iemmatrix;
#X declare -lib iem_ambi;
#X declare -lib iem_bin_ambi;
#X declare -path iemlib;
#X declare -path ../../;
#X text 28 13 example Decoder matrix calc;
#N canvas 372 576 842 400 init 0;
#X msg 123 137 \; order 3 \; 3D 1 \; speaker 13 \; phantoms 5;
#X obj 120 80 loadbang;
#X connect 1 0 0 0;
#X restore 260 7 pd init;
#N canvas 569 241 303 290 declares 0;
#X obj 18 78 declare -lib iemlib1;
#X obj 18 131 declare -lib zexy;
#X obj 18 114 declare -stdpath iemlib;
#X text 33 50 for acre;
#X text 38 161 for amb;
#X obj 17 95 declare -lib iemlib2;
#X obj 20 184 declare -lib iemmatrix;
#X text 41 230 for binaural tools;
#X obj 17 210 declare -lib iem_ambi;
#X obj 17 258 declare -lib iem_bin_ambi;
#X obj 20 28 declare -path iemlib;
#X obj 22 7 declare -path ../../;
#X restore 317 9 pd declares;
#X obj 199 77 tgl 15 0 3D 3D 3D 17 7 0 10 -262144 -1 -1 1 1;
#X obj 111 76 nbx 3 14 -1e+37 1e+37 0 0 order order ORDER 0 -8 0 10
-262144 -1 -1 3 256;
#X text 72 637 https://bitbucket.org/ambidecodertoolbox/adt.git;
#X text 28 69 1.) Enter;
#X text 196 93 else 2D;
#N canvas 703 464 336 265 ambisonics 0;
#X obj 19 165 amb/order2chls;
#X floatatom 19 187 5 0 0 0 - - -, f 5;
#X msg 23 111 3D;
#X obj 27 88 sel 1 0;
#X msg 60 114 2D;
#X obj 108 90 r order;
#X obj 27 61 r 3D;
#X obj 17 218 outlet;
#X obj 102 126 t b f;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 3 1 4 0;
#X connect 4 0 0 0;
#X connect 5 0 8 0;
#X connect 6 0 3 0;
#X connect 8 0 0 0;
#X connect 8 1 0 1;
#X restore 87 124 pd ambisonics channel count;
#X floatatom 86 147 5 0 0 0 - - ambi_channels, f 5;
#X text 125 146 ambisonics channels in BUS;
#X text 31 286 3.) how Phantom channels;
#X text 50 343 with 2D you normally do not need them;
#X text 49 360 with 3D hemisphere at least one \, the south pole;
#N canvas 1636 148 554 459 calculation 0;
#X obj 44 11 r calc;
#X obj 43 66 t b b b;
#X msg 43 248 \; dc begin_pseudo_inverse \; dc end_pseudo_inverse \;
;
#X obj 52 359 r dc;
#X msg 66 173 \; get-maxre bang \; get-speaker bang \; get-phantoms
bang \;;
#X msg 83 106 \; generate_decoder bang;
#N canvas 6 70 807 405 decoder-generator 0;
#X text 324 225 1.arg: <float> ambisonic order;
#X text 339 243 (1 .. 5 in case of 3 dimensional);
#X text 339 234 (1 .. 12 in case of 2 dimensional);
#X text 324 253 2.arg: <float> dimension (2 or 3);
#X text 324 265 3.arg: <float> number of real existing loudspeakers
;
#X text 324 277 4.arg: <float> number of virtual phantom_loudspeakers
;
#X obj 54 59 r oder;
#X obj 105 55 r 3D;
#X obj 105 77 + 2;
#X obj 239 54 r phantoms;
#X obj 154 55 r speaker;
#X obj 45 129 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 71 250 connect 0 0 1 0 \, connect 1 0 2 0;
#X obj 73 150 t b l l l;
#X obj 71 280 s pd-decoder-config;
#N canvas 858 792 449 240 decoder-config 0;
#X obj 10 10 r dc;
#X obj 10 30 ambi_decode3 3 3 13 5;
#X obj 10 50 s dc-out;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 71 301 pd decoder-config;
#X floatatom 61 83 5 0 0 0 - - -, f 5;
#X floatatom 152 80 5 0 0 0 - - -, f 5;
#X floatatom 104 103 5 0 0 0 - - -, f 5;
#X floatatom 248 87 5 0 0 0 - - -, f 5;
#X text 216 141 generate decoder object;
#X msg 131 173 clear \, obj 10 10 r dc;
#X msg 92 221 obj 10 50 s dc-out;
#X obj 275 120 print ambi_decode3:;
#X obj 75 122 pack 3 3 13 5;
#X msg 114 193 obj 10 30 ambi_decode3 \$1 \$2 \$3 \$4;
#X obj 47 30 r generate_decoder;
#X connect 6 0 16 0;
#X connect 7 0 8 0;
#X connect 8 0 18 0;
#X connect 9 0 19 0;
#X connect 10 0 17 0;
#X connect 11 0 24 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 13 1 22 0;
#X connect 13 2 25 0;
#X connect 13 3 21 0;
#X connect 16 0 24 0;
#X connect 17 0 24 2;
#X connect 18 0 24 1;
#X connect 19 0 24 3;
#X connect 21 0 14 0;
#X connect 22 0 14 0;
#X connect 24 0 13 0;
#X connect 24 0 23 0;
#X connect 25 0 14 0;
#X connect 26 0 24 0;
#X restore 295 60 pd decoder-generator;
#N canvas 9 87 450 300 maxre 0;
#X obj 63 131 amb/maxre;
#X obj 64 155 pp ambi_weight;
#X text 62 201 optimal weights;
#X obj 90 79 r order;
#X obj 64 110 i 3;
#X obj 65 48 r get-maxre;
#X obj 64 179 s dc;
#X text 59 24 calculate order weights;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 3 0 4 1;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X restore 294 89 pd maxre calculator;
#N canvas 758 100 450 300 matrix 0;
#X obj 59 171 mtx;
#X msg 82 133 write decoder.mtx;
#X obj 58 196 mtx_print maxtrix;
#X obj 62 106 round_zero 1e-06;
#X obj 227 47 r save;
#X msg 226 140 write \$1;
#X obj 16 58 t b;
#X obj 62 67 r dc-out;
#X obj 224 103 savepanel;
#X obj 226 69 route bang;
#X obj 315 52 r save_to;
#X obj 204 252 print decoder_matrix;
#X obj 16 36 r print_decoder;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 5 0 11 0;
#X connect 6 0 0 0;
#X connect 6 0 11 0;
#X connect 7 0 3 0;
#X connect 8 0 5 0;
#X connect 9 0 8 0;
#X connect 10 0 5 0;
#X connect 12 0 6 0;
#X restore 297 208 pd matrix;
#X obj 53 408 print dc;
#X obj 52 381 spigot 1;
#X obj 107 359 r v_decode;
#X text 50 336 Verbosity;
#N canvas 1468 460 628 562 mirror-weights 0;
#X msg 162 127 mirror_weight 0.7;
#X msg 130 454 ipht_ireal_muladd \$1 \$2 \$3;
#X msg 311 271 1 6 \$1;
#X obj 135 216 f;
#X obj 167 216 f;
#X obj 160 178 * 0.25;
#X obj 217 178 * 0.5;
#X msg 332 296 2 8 \$1;
#X msg 154 268 1 13 \$1 \, 1 7 \$1;
#X msg 176 294 2 7 \$1 \, 2 9 \$1;
#X msg 348 326 3 10 \$1;
#X msg 191 323 3 9 \$1 \, 3 11 \$1;
#X msg 351 357 4 12 \$1;
#X msg 201 352 4 11 \$1 \, 4 13 \$1;
#X obj 165 153 route mirror_weight;
#X obj 130 426 t a;
#X obj 123 79 r get-mirror-weights;
#X obj 161 103 loadbang;
#X obj 131 489 s dc;
#X text 60 13 This is Musil Magic \, dont know how this is controlled
;
#X text 60 27 it should be in concert halls when you suppress the oposite
speaker you get a wider sweet point \, so normally not needed (in my
understanding);
#X connect 0 0 14 0;
#X connect 1 0 18 0;
#X connect 2 0 15 0;
#X connect 3 0 8 0;
#X connect 3 0 9 0;
#X connect 3 0 11 0;
#X connect 3 0 13 0;
#X connect 4 0 2 0;
#X connect 4 0 7 0;
#X connect 4 0 10 0;
#X connect 4 0 12 0;
#X connect 5 0 3 1;
#X connect 6 0 4 1;
#X connect 7 0 15 0;
#X connect 8 0 15 0;
#X connect 9 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 15 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 14 0 6 0;
#X connect 14 0 5 0;
#X connect 15 0 1 0;
#X connect 16 0 3 0;
#X connect 16 0 4 0;
#X connect 17 0 0 0;
#X restore 303 155 pd mirror-weights;
#X text 134 19 Calculate a decoder matrix and output;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 4 0;
#X connect 1 2 5 0;
#X connect 3 0 10 0;
#X connect 10 0 9 0;
#X restore 164 438 pd calculation;
#X text 30 183 2.)set speaker channel count;
#X obj 80 258 nbx 5 14 -1e+37 1e+37 0 0 speaker speaker speaker 0 -8
0 10 -262144 -1 -1 13 256;
#X text 23 255 Enter;
#X obj 78 317 nbx 5 14 -1e+37 1e+37 0 0 phantoms phantoms phantoms
0 -8 0 10 -262144 -1 -1 5 256;
#N canvas 327 311 701 368 speaker-list 0;
#X text 61 73 Example for 2D 8 speaker;
#X msg 57 107 \; dc real_ls 1 0 \; dc real_ls 2 45 \; dc real_ls 3
90 \; dc real_ls 4 135 \; dc real_ls 5 180 \; dc real_ls 6 225 \; dc
real_ls 7 270 \; dc real_ls 8 315;
#X text 307 58 Example for 3D 13 speaker;
#X msg 500 114 \; dc real_ls 1 0 0;
#X text 525 97 own list;
#X obj 269 28 r get-speaker;
#X text 228 8 Make a own list and connect to [r get-speaker];
#X text 297 80 NOTE: first index \, second elevation \, third azimuth
!;
#X msg 293 121 \; dc real_ls 1 0 -30 \; dc real_ls 2 0 0 \; dc real_ls
3 0 30 \; dc real_ls 4 0 90 \; dc real_ls 5 0 130 \; dc real_ls 6 0
180 \; dc real_ls 7 0 220 \; dc real_ls 8 0 270 \; dc real_ls 9 30
40 \; dc real_ls 10 30 130 \; dc real_ls 11 30 230 \; dc real_ls 12
30 320 \; dc real_ls 13 90 0 \;;
#X connect 5 0 8 0;
#X restore 270 253 pd speaker-list;
#N canvas 1183 193 450 300 helps 0;
#X obj 32 22 r vis_speakerlist;
#X msg 32 44 \; pd-speaker-list vis \$1;
#X obj 31 86 r vis_phantomlist;
#X msg 31 108 \; pd-phantom-list vis \$1;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X restore 406 7 pd helps;
#X obj 180 258 tgl 15 0 vis_speakerlist vis_speakerlist speakerlist
17 7 0 10 -262144 -1 -1 0 1;
#X obj 190 319 tgl 15 0 vis_phantomlist vis_phantomlist phantomlist
17 7 0 10 -262144 -1 -1 0 1;
#X text 178 242 Edit;
#N canvas 1021 479 523 300 phantom-list 0;
#X text 13 64 on 2D normally none;
#X text 222 17 3D hemisphere;
#X text 257 77 at least south pole;
#X obj 214 60 r get-phantoms;
#X text 42 0 Make a own list and connect to [r get-phantoms];
#X msg 224 97 \; dc pht_ls 1 -90 0 \;;
#X text 238 135 help reduce loudness on horizent;
#X msg 213 153 \; dc pht_ls 1 -90 0 \; dc pht_ls 2 -45 45 \; dc pht_ls
3 -45 135 \; dc pht_ls 4 -45 225 \; dc pht_ls 5 -45 315 \;;
#X connect 3 0 5 0;
#X connect 3 0 7 0;
#X restore 280 320 pd phantom-list;
#X text 189 305 Edit;
#X text 37 404 4.) Do calculation;
#X obj 78 433 bng 15 250 50 0 calc calc calc 17 7 0 10 -262144 -1 -1
;
#X text 31 211 Count of speaker should higher than ambisonics channel
count, f 38;
#X obj 160 536 bng 15 250 50 0 save save save 17 7 0 10 -262144 -1
-1;
#X obj 47 537 bng 15 250 50 0 print_decoder print_decoder print_decoder
17 7 0 10 -228856 -1 -1;
#X text 234 527 or save to;
#X text 41 501 5.) If output non singular and plausibel Save to a filename
with preferrable .mtx extension;
#X symbolatom 327 545 10 0 0 0 filename.mtx - save_to, f 10;
#X text 41 568 6 copy matrix to your Ambisonics decoder application
and enjoy;
#X text 43 621 Better use ALLRAD Decoder with better results \, see:
;
#X text 45 607 Note:;
#X text 29 30 for acre amb library;
#X text 151 59 and Dimensions;
#X text 19 133 and get;
#X text 58 463 and see log at PD window for errors and matrix;
#X text 57 475 on matrix non singular got to 2 and change values;
#X connect 8 0 9 0;
